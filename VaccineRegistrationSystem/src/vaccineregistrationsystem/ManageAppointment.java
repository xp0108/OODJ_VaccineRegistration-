package vaccineregistrationsystem;

import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author User
 */
public class ManageAppointment extends javax.swing.JFrame {

    /**
     * Creates new form ManageAppointment
     */
    public ManageAppointment() {
        initComponents();
        setLocationRelativeTo(null);
        tableDose1.setDefaultEditor(Object.class, null);
        tableDose2.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDose1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDose2 = new javax.swing.JTable();
        lblRegisterName3 = new javax.swing.JLabel();
        txtIC = new javax.swing.JTextField();
        lblRegisterName4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblRegisterName1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        dpAppDate = new com.github.lgooddatepicker.components.DatePicker();
        lblRegisterName5 = new javax.swing.JLabel();
        lblRegisterName6 = new javax.swing.JLabel();
        cmbAppStatus = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblRegisterName7 = new javax.swing.JLabel();
        cmbCentre = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Covid-19 Vaccine Registration System |  Manage Vaccine Appointment");

        jPanel1.setBackground(new java.awt.Color(212, 227, 247));

        jPanel2.setBackground(new java.awt.Color(101, 108, 117));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Appointment for Dose 1");
        jLabel2.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));

        tableDose1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IC/Passport", "Name", "Centre", "Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(tableDose1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage Vaccine Appointment ");
        jLabel3.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));

        jPanel3.setBackground(new java.awt.Color(101, 108, 117));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Appointment for Dose 2");
        jLabel4.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));

        tableDose2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IC/Passport", "Name", "Centre", "Date", "Status"
            }
        ));
        jScrollPane2.setViewportView(tableDose2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblRegisterName3.setText("IC/Passport:");
        lblRegisterName3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName3.setForeground(new java.awt.Color(0, 0, 0));

        txtIC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIC.setEnabled(false);

        lblRegisterName4.setText("Name:");
        lblRegisterName4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName4.setForeground(new java.awt.Color(0, 0, 0));

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtName.setEnabled(false);

        lblRegisterName1.setText("Search IC/Passport:");
        lblRegisterName1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName1.setForeground(new java.awt.Color(0, 0, 0));

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblRegisterName5.setText("Appointment Date:");
        lblRegisterName5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName5.setForeground(new java.awt.Color(0, 0, 0));

        lblRegisterName6.setText("Appointment Status:");
        lblRegisterName6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName6.setForeground(new java.awt.Color(0, 0, 0));

        cmbAppStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Appointment Status-", "Panding", "Active", "Done", "Cancel" }));
        cmbAppStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbAppStatus.setToolTipText("");

        btnUpdate.setText("Update");
        btnUpdate.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.setBackground(new java.awt.Color(0, 0, 0));
        btnRemove.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblRegisterName7.setText("Centre:");
        lblRegisterName7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName7.setForeground(new java.awt.Color(0, 0, 0));

        cmbCentre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Centre-", "Centre 1", "Centre 2", "Centre 3", "Centre 4", "Centre 5", "Centre 6" }));
        cmbCentre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbCentre.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(380, 380, 380)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(3, 3, 3))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRegisterName1)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRegisterName5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblRegisterName4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblRegisterName3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIC, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRegisterName6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRegisterName7, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dpAppDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbAppStatus, 0, 195, Short.MAX_VALUE))
                .addGap(116, 116, 116))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterName1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegisterName6)
                            .addComponent(cmbAppStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegisterName7)
                            .addComponent(cmbCentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegisterName3)
                            .addComponent(txtIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegisterName4)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpAppDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegisterName5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        DefaultTableModel model = (DefaultTableModel) tableDose1.getModel();
        String search = txtSearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tableDose1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tablePeople.getModel();
//
//        if (tablePeople.getSelectedRowCount() == 1) {
//            //single row selected than update
//            String pIC = txtIC.getText();
//            String nameE = txtName.getText();
//            String dobE = txtDOB.getText();
//            String addressE = taAddress.getText();
//            String statusE = String.valueOf(cmbStatus.getSelectedItem());
//
//            if (nameE.equals("") || dobE.equals("") || addressE.equals("")) {
//                JOptionPane.showMessageDialog(null, "Please fill up the all the details.", "Empty text field found !", JOptionPane.ERROR_MESSAGE);
//
//            } else {
//                //update table
//                model.setValueAt(pIC, tablePeople.getSelectedRow(), 0);
//                model.setValueAt(nameE, tablePeople.getSelectedRow(), 1);
//                model.setValueAt(addressE, tablePeople.getSelectedRow(), 2);
//                model.setValueAt(dobE, tablePeople.getSelectedRow(), 3);
//                model.setValueAt(statusE, tablePeople.getSelectedRow(), 4);
//
//                String file = "people.txt";
//                String tempPeopleFile = "TempPeople.txt";
//                File oldPeopleFile = new File("people.txt");
//                File newPeopleFile = new File(tempPeopleFile);
//
//                String ic;
//                String name;
//                String add;
//                String dob;
//                String status;
//
//                try (FileWriter fw = new FileWriter(newPeopleFile, true); BufferedWriter bw = new BufferedWriter(fw); Scanner ss = new Scanner(oldPeopleFile);) {
//
//                    ss.useDelimiter("[,\n]");
//
//                    while (ss.hasNext()) {
//                        ic = ss.next();
//                        name = ss.next();
//                        add = ss.next();
//                        dob = ss.next();
//                        status = ss.next();
//
//                        if (pIC.trim().equals(ic.trim())) {
//                            bw.write(pIC);
//                            bw.write(",");
//                            bw.write(nameE);
//                            bw.write(",");
//                            bw.write(addressE);
//                            bw.write(",");
//                            bw.write(dobE);
//                            bw.write(",");
//                            bw.write(statusE);
//                            bw.write("\n");
//                        } else {
//                            bw.write(ic);
//                            bw.write(",");
//                            bw.write(name);
//                            bw.write(",");
//                            bw.write(add);
//                            bw.write(",");
//                            bw.write(dob);
//                            bw.write(",");
//                            bw.write(status);
//                            bw.write("\n");
//
//                        }
//                    }
//
//                    ss.close();
//                    fw.close();
//                    bw.close();
//                    System.out.println("flie close");
//
//                    oldPeopleFile.delete();
//                    System.out.println("flie deleted");
//
//                    File dump = new File(file);
//                    newPeopleFile.renameTo(dump);
//                    System.out.println("flie renamed");
//
//                    JOptionPane.showMessageDialog(this, "Record Updated Successfully");
//                } catch (Exception e) {
//                    JOptionPane.showMessageDialog(null, "Edit People record fail due to " + e);
//                }
//
//            }
//        } else {
//            if (tablePeople.getRowCount() == 0) {
//                JOptionPane.showMessageDialog(this, "Table if Empty");
//            } else {
//                JOptionPane.showMessageDialog(this, "Please select a Row for Update");
//            }
//        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tablePeople.getModel();
//
//        if (tablePeople.getSelectedRowCount() == 1) {
//            int deletePeopleOption = JOptionPane.showConfirmDialog(this, "Wanted to Delete this People record ?", "Delete Record",
//                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//            if (deletePeopleOption == JOptionPane.YES_OPTION) {
//
//                // delete from table
//                int i = tablePeople.getSelectedRow();
//                if (i >= 0) {
//                    // remove a row from jtable
//                    model.removeRow(i);
//                    System.out.println("Delete from table");
//                }
//
//                //DELETE IN people.txt
//                String peopleFile = "people.txt";
//                String pIC = txtIC.getText();
//
//                String tempPeopleFile = "TempPeople.txt";
//                File oldPeopleFile = new File("people.txt");
//                File newPeopleFile = new File(tempPeopleFile);
//
//                String ic;
//                String name;
//                String add;
//                String dob;
//                String status;
//
//                try (FileWriter fw = new FileWriter(newPeopleFile, true); BufferedWriter bw = new BufferedWriter(fw); Scanner ss = new Scanner(oldPeopleFile);) {
//                    ss.useDelimiter("[,\n]");
//                    while (ss.hasNext()) {
//                        ic = ss.next();
//                        name = ss.next();
//                        add = ss.next();
//                        dob = ss.next();
//                        status = ss.next();
//
//                        if (!pIC.trim().equals(ic.trim())) {
//                            bw.write(ic);
//                            bw.write(",");
//                            bw.write(name);
//                            bw.write(",");
//                            bw.write(add);
//                            bw.write(",");
//                            bw.write(dob);
//                            bw.write(",");
//                            bw.write(status);
//                            bw.write("\n");
//                        }
//                    }
//
//                    ss.close();
//                    fw.close();
//                    bw.close();
//
//                    oldPeopleFile.delete();
//                    File dump = new File(peopleFile);
//                    newPeopleFile.renameTo(dump);
//                    JOptionPane.showMessageDialog(null, "People record delete successfully !");
//
//                    //clean txt
//                    txtName.setText("");
//                    txtIC.setText("");
//                    txtDOB.setText("");
//                    taAddress.setText("");
//                    cmbStatus.setSelectedIndex(0);
//
//                } catch (Exception e) {
//                    JOptionPane.showMessageDialog(null, "Edit People record fail due to " + e);
//                }
//
//                //                //DELETE FROM login.txt
//                //                String loginFile = "login.txt";
//                //
//                //                String tempLoginFile = "TempLogin.txt";
//                //                File oldLoginFile = new File("login.txt");
//                //                File newLoginFile = new File(tempLoginFile);
//            } else {
//                Login loginPage = new Login();
//                loginPage.setVisible(false);
//                JOptionPane.showMessageDialog(null, "Cancel delete People record");
//                this.setVisible(true);
//            }
//        } else {
//            if (tablePeople.getRowCount() == 0) {
//                JOptionPane.showMessageDialog(this, "Table if Empty");
//            } else {
//                JOptionPane.showMessageDialog(this, "Please select a Row for Delete");
//            }
//        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        PersonnelMain personnel = new PersonnelMain();
        personnel.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbAppStatus;
    private javax.swing.JComboBox<String> cmbCentre;
    private com.github.lgooddatepicker.components.DatePicker dpAppDate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRegisterName1;
    private javax.swing.JLabel lblRegisterName3;
    private javax.swing.JLabel lblRegisterName4;
    private javax.swing.JLabel lblRegisterName5;
    private javax.swing.JLabel lblRegisterName6;
    private javax.swing.JLabel lblRegisterName7;
    private javax.swing.JTable tableDose1;
    private javax.swing.JTable tableDose2;
    private javax.swing.JTextField txtIC;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
