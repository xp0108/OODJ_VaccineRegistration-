package vaccineregistrationsystem;

import java.awt.Font;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static vaccineregistrationsystem.ManageVaccine.scanner;

public class ManageCentre extends javax.swing.JFrame {

    /**
     * Creates new form ManageCentre
     */
    public ManageCentre() {
        initComponents();
        setLocationRelativeTo(null);
        ShowCentreData();
        ShowCmbVeccineTypeData();
        cmbVaccineType.setSelectedIndex(-1);
        tableCentre.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtAmount = new javax.swing.JTextField();
        lblRegisterName4 = new javax.swing.JLabel();
        lblRegisterName5 = new javax.swing.JLabel();
        cmbVaccineType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCentre = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnBack1 = new javax.swing.JButton();
        lblRegisterName1 = new javax.swing.JLabel();
        txtCentreName = new javax.swing.JTextField();
        lblRegisterName3 = new javax.swing.JLabel();
        lblRegisterName6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taCentreAdd = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Covid-19 Vaccine Registration System |  Manage Vaccine Centre");

        jPanel1.setBackground(new java.awt.Color(212, 227, 247));

        txtAmount.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblRegisterName4.setText("Centre Address:");
        lblRegisterName4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName4.setForeground(new java.awt.Color(0, 0, 0));

        lblRegisterName5.setText("Vaccine Amount:");
        lblRegisterName5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName5.setForeground(new java.awt.Color(0, 0, 0));

        cmbVaccineType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Vaccine Type-" }));
        cmbVaccineType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbVaccineType.setToolTipText("");
        cmbVaccineType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cmbVaccineTypePopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Manage Vaccine Centre");
        jLabel4.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));

        btnAdd.setText("Add");
        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tableCentre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Centre Name", "Centre Address", "Vaccine Type", "Centre' Vaccine Amount"
            }
        ));
        tableCentre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCentreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCentre);

        btnUpdate.setText("Update");
        btnUpdate.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.setBackground(new java.awt.Color(0, 0, 0));
        btnRemove.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.setBackground(new java.awt.Color(0, 0, 0));
        btnBack1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        lblRegisterName1.setText("Centre Name:");
        lblRegisterName1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName1.setForeground(new java.awt.Color(0, 0, 0));

        txtCentreName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblRegisterName3.setText("Centre Name:");
        lblRegisterName3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName3.setForeground(new java.awt.Color(0, 0, 0));

        lblRegisterName6.setText("Vaccine Type:");
        lblRegisterName6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRegisterName6.setForeground(new java.awt.Color(0, 0, 0));

        taCentreAdd.setColumns(20);
        taCentreAdd.setRows(5);
        taCentreAdd.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(taCentreAdd);

        btnClear.setText("Clear");
        btnClear.setBackground(new java.awt.Color(0, 0, 0));
        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(259, 259, 259))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(302, 302, 302)
                        .addComponent(btnBack1)
                        .addGap(247, 247, 247))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(lblRegisterName4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(lblRegisterName3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCentreName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnClear)
                                .addGap(18, 18, 18)
                                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRegisterName6)
                                    .addComponent(lblRegisterName5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAmount)
                                    .addComponent(cmbVaccineType, 0, 170, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(lblRegisterName1)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterName1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegisterName3)
                            .addComponent(txtCentreName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblRegisterName4)))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack1)
                            .addComponent(btnClear)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbVaccineType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRegisterName6))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegisterName5)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (txtCentreName.getText().isEmpty() || txtAmount.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Please fill up all the fills", "Uh Oh...",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            Vaccine vaccineType = new Vaccine(String.valueOf(cmbVaccineType.getSelectedItem()));

            int amount = Integer.parseInt(txtAmount.getText());
            AddCentre(txtCentreName.getText(), taCentreAdd.getText(), vaccineType, amount);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableCentre.getModel();

        if (tableCentre.getSelectedRowCount() == 1) {
            //single row selected than update
            String pCentreName = txtCentreName.getText();
            String centreAddE = taCentreAdd.getText();
            String vaccineTypeE = String.valueOf(cmbVaccineType.getSelectedItem());
            int amountE = Integer.parseInt(txtAmount.getText());

            if (pCentreName.equals("") || txtAmount.getText().equals("") || taCentreAdd.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill up the all the details.", "Empty text field found !", JOptionPane.ERROR_MESSAGE);

            } else {
                //update table
                model.setValueAt(pCentreName, tableCentre.getSelectedRow(), 0);
                model.setValueAt(centreAddE, tableCentre.getSelectedRow(), 1);
                model.setValueAt(vaccineTypeE, tableCentre.getSelectedRow(), 2);
                model.setValueAt(amountE, tableCentre.getSelectedRow(), 3);

                String file = "centre.txt";
                String tempCentreFile = "TempCentre.txt";
                File oldCentreFile = new File(file);
                File newCentreFile = new File(tempCentreFile);

                try ( FileWriter fw = new FileWriter(newCentreFile, true);  BufferedWriter bw = new BufferedWriter(fw);  Scanner ss = new Scanner(oldCentreFile);) {

                    ss.useDelimiter("[,\n]");

                    while (ss.hasNext()) {
                        String centreName = ss.next();
                        String centreAdd = ss.next();
                        String vaccineType = ss.next();
                        int amount = ss.nextInt();

                        if (pCentreName.trim().equals(centreName.trim())) {
                            Vaccine vacineTypeEE = new Vaccine(vaccineTypeE);
                            Centre modyCentre = new Centre(pCentreName, centreAddE, vacineTypeEE, amountE);
                            bw.write(modyCentre.toString());
                        } else {
                            Vaccine vacineTypee = new Vaccine(vaccineType);
                            Centre oriCentre = new Centre(centreName, centreAdd, vacineTypee, amount);
                            bw.write(oriCentre.toString());

                        }
                    }

                    ss.close();
                    bw.close();
                    fw.close();

                    oldCentreFile.delete();

                    File dump = new File(file);
                    newCentreFile.renameTo(dump);
                    JOptionPane.showMessageDialog(this, "Record Updated Successfully");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Edit Centre record fail due to " + e);
                    System.out.println(e);
                }

            }
        } else {
            if (tableCentre.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table if Empty");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a Row for Update");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableCentre.getModel();

        if (tableCentre.getSelectedRowCount() == 1) {
            int deleteCentreOption = JOptionPane.showConfirmDialog(this, "Wanted to Delete this Centre record ?", "Delete Record",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (deleteCentreOption == JOptionPane.YES_OPTION) {

                // delete from table
                int i = tableCentre.getSelectedRow();
                if (i >= 0) {
                    // remove a row from jtable
                    model.removeRow(i);
                    System.out.println("Delete from table");
                }

                String file = "centre.txt";
                String pCentreName = txtCentreName.getText();

                String tempCentreFile = "TempCentre.txt";
                File oldCentreFile = new File(file);
                File newCentreFile = new File(tempCentreFile);

                try ( FileWriter fw = new FileWriter(newCentreFile, true);  BufferedWriter bw = new BufferedWriter(fw);  Scanner ss = new Scanner(oldCentreFile);) {

                    ss.useDelimiter("[,\n]");
                    while (ss.hasNext()) {
                        String centreName = ss.next();
                        String centreAdd = ss.next();
                        String vaccineType = ss.next();
                        int amount = ss.nextInt();

                        if (!pCentreName.trim().equals(centreName.trim())) {
                            Vaccine vacineTypee = new Vaccine(vaccineType);
                            Centre oriCentre = new Centre(centreName, centreAdd, vacineTypee, amount);
                            bw.write(oriCentre.toString());
                        }
                    }

                    ss.close();
                    bw.close();
                    fw.close();

                    oldCentreFile.delete();
                    File dump = new File(file);
                    newCentreFile.renameTo(dump);

                    //clean txt
                    txtCentreName.setText("");
                    txtAmount.setText("");
                    cmbVaccineType.setSelectedIndex(-1);
                    taCentreAdd.setText("");
                    txtCentreName.setEnabled(true);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Edit Vaccine record fail due to " + e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Cancel delete Centre record");

            }
        } else {
            if (tableCentre.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table if Empty");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a Row for Delete");
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        DefaultTableModel model = (DefaultTableModel) tableCentre.getModel();
        String search = txtSearch.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tableCentre.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));


    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        PersonnelMain personnel = new PersonnelMain();
        personnel.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtCentreName.setText("");
        txtAmount.setText("");
        cmbVaccineType.setSelectedIndex(-1);
        taCentreAdd.setText("");
        txtCentreName.setEnabled(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void cmbVaccineTypePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbVaccineTypePopupMenuWillBecomeVisible
        ShowCmbVeccineTypeData();
    }//GEN-LAST:event_cmbVaccineTypePopupMenuWillBecomeVisible

    private void tableCentreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCentreMouseClicked
        int i = tableCentre.getSelectedRow();
        TableModel model = tableCentre.getModel();

        txtCentreName.setText(model.getValueAt(i, 0).toString());
        taCentreAdd.setText(model.getValueAt(i, 1).toString());
        cmbVaccineType.setSelectedItem(model.getValueAt(i, 2).toString());
        txtAmount.setText(model.getValueAt(i, 3).toString());

        //disable to edit
        txtCentreName.setEnabled(false);
    }//GEN-LAST:event_tableCentreMouseClicked
    public void ShowCentreData() {
        // show data in the JTable
        File fileVaccine = new File("centre.txt");
        try ( BufferedReader br = new BufferedReader(new FileReader(fileVaccine));) {
            tableCentre.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 15));

            DefaultTableModel model = (DefaultTableModel) tableCentre.getModel();

            Object[] data = br.lines().toArray();

            // extratct data from lines
            // set data to jtable model
            for (int i = 0; i < data.length; i++) {
                String line = data[i].toString().trim();
                String[] dataRow = line.split("[,\n]");

                model.addRow(dataRow);

            }
            br.close();

        } catch (IOException ex) {
            Logger.getLogger(ManageCentre.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void AddCentre(String CentreName, String Address, Vaccine Type, int Amount) {
        boolean found = false;
        String tmpCentreName = txtCentreName.getText();

        try {
            scanner = new Scanner(new File("centre.txt"));
            scanner.useDelimiter("[,\n]");

            while (scanner.hasNext() && !found) {
                tmpCentreName = scanner.next();

                if (tmpCentreName.trim().equals(CentreName.trim())) {
                    found = true;
                }
            }

            //after check file
            if (found == true) {

                JOptionPane.showMessageDialog(this, "Centre already exist", "Uh Oh...", JOptionPane.WARNING_MESSAGE);

            } else {

                try {
                    File file = new File("centre.txt");
                    FileWriter fw = new FileWriter(file, true);
                    BufferedWriter bw = new BufferedWriter(fw);

                    Centre addCentre = new Centre(CentreName, Address, Type, Amount);
                    bw.write(addCentre.toString());

                    bw.close();
                    fw.close();
                    JOptionPane.showMessageDialog(this, "Add Centre Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Error saving or loading data!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }

//                Add data into jtable
                Object[] dataRow = {CentreName, Address, cmbVaccineType.getSelectedItem(), Amount};
                DefaultTableModel model = (DefaultTableModel) tableCentre.getModel();
                model.addRow(dataRow);

                txtCentreName.setText("");
                txtAmount.setText("");
                cmbVaccineType.setSelectedIndex(-1);
                taCentreAdd.setText("");
                txtCentreName.setEnabled(false);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Something went wrong, please try again!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void ShowCmbVeccineTypeData() {
        try {
            String file = "vaccine.txt";
            BufferedReader br = new BufferedReader(new FileReader(file));
            List<String> vaccineTypes = new ArrayList<String>();
            String line;
            try {
                while ((line = br.readLine()) != null) {
                    String[] loginarr = line.split("[,\n]");
                    vaccineTypes.add(loginarr[0]);
                }
            } catch (FileNotFoundException e) {
                System.err.println("Error, file " + file + " didn't exist.");
            } finally {
                br.close();
            }
            DefaultComboBoxModel<String> lineArray = new DefaultComboBoxModel(vaccineTypes.toArray());

            cmbVaccineType.setModel(lineArray);
        } catch (HeadlessException | IOException e) {
            System.out.println(e);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCentre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbVaccineType;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRegisterName1;
    private javax.swing.JLabel lblRegisterName3;
    private javax.swing.JLabel lblRegisterName4;
    private javax.swing.JLabel lblRegisterName5;
    private javax.swing.JLabel lblRegisterName6;
    private javax.swing.JTextArea taCentreAdd;
    private javax.swing.JTable tableCentre;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCentreName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
